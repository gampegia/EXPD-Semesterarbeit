col = dat$geschlechtCol,
pch = as.integer(factor(dat$haarfarbe))
)
legend("topright",  # Position der Legende
legend = c("weiblich", "männlich"),  # Beschriftungen
col = c("red4", "seagreen4"),  # Farben
pch = 1)  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
legend("topleft",  # Position der Legende
legend = levels(factor(dat$haarfarbe)),  # Beschriftungen
col =  1,  # Farben
pch = c(1,2,3))  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
legend("topright",  # Position der Legende
legend = c("weiblich", "männlich"),  # Beschriftungen
col = c("red4", "seagreen4"),  # Farben
)  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
legend("topright",  # Position der Legende
legend = c("weiblich", "männlich"),  # Beschriftungen
col = c("red4", "seagreen4"),  # Farben
lty = 1)  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
legend("topright",  # Position der Legende
legend = c("weiblich", "männlich"),  # Beschriftungen
col = c("red4", "seagreen4"),  # Farben
lwd = 1)  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
dat$geschlechtCol <- ifelse(dat$geschlecht == "weiblich", "red4", "seagreen4")
scatter.smooth(x = dat$koerpergroesse,
y = dat$handspanne,
main = "Körpergrösse / Handspanne",
xlab = "Körpergrösse [cm]",
ylab = "Handspanne [cm]",
asp = 1,
col = dat$geschlechtCol,
pch = as.integer(factor(dat$haarfarbe))
)
legend("topright",  # Position der Legende
legend = c("weiblich", "männlich"),  # Beschriftungen
col = c("red4", "seagreen4"),  # Farben
lwd = 1)  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
legend("topleft",  # Position der Legende
legend = levels(factor(dat$haarfarbe)),  # Beschriftungen
col =  1,  # Farben
pch = c(1,2,3))  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
legend("topright",  # Position der Legende
legend = c("weiblich", "männlich"),  # Beschriftungen
col = c("red4", "seagreen4"),  # Farben
lty = 1,
lwd = 2)  # Punkttyp (Sie können hier den Typ anpassen oder mehrere Typen angeben)
diamanten <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/diamanten.csv", sep=";")
View(diamanten)
# AUFGABE 2
diamanten <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/diamanten.csv", sep=";")
# AUFGABE 2
dia <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/diamanten.csv", sep=";")
# AUFGABE 2
dia <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/diamanten.csv", sep=";")
hist(dia$price)
quantile(dia$price, probs = c(0.25,0.5,0.7))
abline(v= quartile ,lty=2)
quartile <- quantile(dia$price, probs = c(0.25,0.5,0.7))
abline(v= quartile ,lty=2)
View(dia)
levels(factor(dia$cut))
cuts <- dia$cut
cuts <- order(dia$cut, c("Ideal", "Premium","Very Good","Good","Fair")
cuts <- order(dia$cut, c("Ideal", "Premium","Very Good","Good","Fair")
barplot(dia$cut,names.arg = c("Ideal", "Premium","Very Good","Good","Fair"))
oder_cuts <- factor(dia$cut, levels = (c("Ideal", "Premium","Very Good","Good","Fair"))
barplot(dia$cut, names.arg = oder_cuts)
oder_cuts <- factor(dia$cut, levels = (c("Ideal","Premium","Very Good","Good","Fair"))
barplot(dia$cut, names.arg = oder_cuts)
oder_cuts <- factor(dia$cut, levels = c("Ideal","Premium","Very Good","Good","Fair"))
barplot(dia$cut, names.arg = oder_cuts)
oder_cuts <- factor(dia$cut, levels = c("Ideal","Premium","Very Good","Good","Fair"))
barplot(dia$cut, names.arg = oder_cuts)
barplot(dia$cut)
barplot(sum(dia$cut), names.arg = oder_cuts)
barplot(factor(dia$cut), names.arg = oder_cuts)
barplot(table(dia$cut), names.arg = oder_cuts)
barplot(table(dia$cut), names.arg = oder_cuts)
levels(factor(dia$cut))
barplot(table(dia$cut)
barplot(table(dia$cut)
barplot(table(dia$cut)
barplot(table(dia$cut))
cuts <- table(dia$cut)
barplot()
barplot(cuts)
barplot(cuts, names.arg = oder_cuts)
barplot(cuts, names.arg = c("Ideal","Premium","Very Good","Good","Fair"))
barplot(sort(cuts, decreasing =  TRUE) )
## AUFGABE D
pairs(dia$carat ~ dia$price~ dia$depth)
## AUFGABE D
pairs( ~ dia$carat + dia$price+ dia$depth)
## AUFGABE D
pairs( ~ dia$carat + dia$price+ dia$depth,col
= rgb(0,0,0, alpha= 0.2))
## AUFGABE D
pairs(~ dia$carat +  dia$depth,data =dia$price ,col
= rgb(0,0,0, alpha= 0.2)))
## AUFGABE D
pairs(~ dia$carat +  dia$depth,data =dia$price ,col = rgb(0,0,0, alpha= 0.2)))
## AUFGABE D
pairs(~ dia$carat +  dia$depth,data =dia$price ,col = rgb(0,0,0, alpha= 0.2))
## AUFGABE D
pairs(~ dia$carat + dia$price+ dia$depth,data = dia,col
= rgb(0,0,0, alpha= 0.2)))
## AUFGABE D
pairs(~ dia$carat + dia$price+ dia$depth,data = dia,col
= rgb(0,0,0, alpha= 0.2))
## AUFGABE D
pairs(~ dia$carat + dia$price+ dia$depth,data = dia$price,col
= rgb(0,0,0, alpha= 0.2))
pairs(dia[c("carat", "price", "depth")])
pairs(dia[c("carat", "price", "depth")],col
= rgb(0,0,0, alpha= 0.2))
## AUFGABE D
pairs(~ dia$carat + dia$price+ dia$depth,data = dia$price,col
= rgb(0,0,0, alpha= 0.2))
## AUFGABE D
pairs(~ dia$carat + dia$price+ dia$depth,col
= rgb(0,0,0, alpha= 0.2))
boxplot(dia$price ~ dia$clarity, data = dia)
boxplot(dia$price ~ dia$clarity, data = dia, xlab = c("I1", (worst), SI1, SI2, VS1, VS2, VVS1, VVS2, IF
boxplot(dia$price ~ dia$clarity, data = dia, xlab = c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
boxplot(dia$price ~ dia$clarity, data = dia, xlab = "I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF")
boxplot(dia$price ~ dia$clarity, data = dia, xlab = "I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF")
boxplot(dia$price ~ dia$clarity, data = dia, xlab = "I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF")
boxplot(dia$price ~ dia$clarity, data = dia, xlab = ("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
boxplot(dia$price ~ dia$clarity, data = dia, xlab = ("I1""SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
#Aufgabe F
clarity_sorted <- c(("I1","SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
boxplot(dia$price ~ dia$clarity, data = dia, xlab = )
boxplot(dia$price ~ clarity, data = dia )
#Aufgabe F
clarity_sorted <- factor(c(("I1","SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF")))
boxplot(dia$price ~ clarity, data = dia )
#Aufgabe F
clarity_sorted <- factor(dia$clarity, levels = ("I1","SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
#Aufgabe F
clarity_sorted <- factor(dia$clarity, levels = c("I1","SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
boxplot(dia$price ~ clarity, data = dia )
boxplot(dia$price ~ clarity, data = dia )
#Aufgabe F
clarity_sorted <- factor(dia$clarity, levels = c("I1","SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
boxplot(dia$price ~ clarity, data = dia )
#Aufgabe F
clarity_sorted <- factor(dia$clarity, levels = c("I1","SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
boxplot(dia$price ~ clarity, data = dia )
boxplot(dia$price ~ clarity_sorted, data = dia )
mpg <- readRDS("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/mpg.rds")
mpg <- readRDS("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/imports85.txt")
imports85 <- read.delim("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/imports85.txt")
View(imports85)
imp <- read.delim("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW6/imports85.txt")
plot(imp$ps ~ imp$city.mpg)
plot(imp$city.mpg ~ imp$city.mpg)
plot(imp$city.mpg ~ imp$city.mpg)
plot(imp$hwy.mpg ~ imp$city.mpg)
scatter.smooth(imp$hwy.mpg ~ imp$city.mpg)
scatter.smooth(imp$ps ~ imp$city.mpg)
oil.animals <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW7/P07/oil-animals.csv")
View(oil.animals)
oil.animals <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW7/P07/oil-animals.csv")
summary(oil.animals)
head(oil.animals)
dat <- read.csv("C:/Users/glm87/Documents/GITHUB/ZHAW-Repo/EXPD/SW7/P07/oil-animals.csv")
summary(dat)
head(dat)
plot(dat$Longitude ~ dat$Latitude)
plot(dat$Longitude , dat$Latitude)
plot(dat$Longitude , dat$Latitude,
xlab = "Breitengrad",
ylab = "Längengrad"
)
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
par(mfrow=c(1,2))
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(c("28.75389", "−87.68528"),pch = 8)
points(28.75389, −87.68528,pch = 8)
points(-87.68528, 28.75389, pch=8, col="red", cex=2)
points(-87.68528, 28.75389, pch=8, col="red", cex=2)
par(mfrow=c(1,2))
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="red", cex=2)
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="red", cex=2)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
par(mfrow=c(1,2))
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
?palette
palette("Medium Spring Green")
palette.colors("Medium Spring Green")
palette.colors(n= NULL ,palette = "Medium Spring Green")
palette.colors(n= NULL ,palette = Medium Spring Green)
palette.pals()
palette.colors(n= NULL ,palette = "Paired")
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
palette.colors(n= NULL ,palette = "Paired")
palette.colors(n= NULL ,palette = "Paired")
palette.pals()
palette("Accent")
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
palette("Pairs")
palette("Paired")
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
palette("ggplot2")
# Grafik für Tierarten
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
palette("Tableau 10")
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Type), main="Tierarten an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Type)), col=1:length(levels(as.factor(dat$Type))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
# Grafik für Zustand der Tiere (lebendig/tot)
plot(dat$Longitude, dat$Latitude, col=as.factor(dat$Alive), main="Zustand der Tiere an Fundorten", xlab="Longitude", ylab="Latitude", pch=19)
legend("topright", legend=levels(as.factor(dat$Alive)), col=1:length(levels(as.factor(dat$Alive))), pch=19)
points(-87.68528, 28.75389, pch=8, col="blue", cex=2)
text(-87.68528, 28.75389, labels="Deepwater Horizon", pos=4, col="blue")
setwd("C:\\Users\\jonas\\OneDrive\\Dokumente\\GitHub\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
dat <- read_csv("school-shootings-data.csv")
#setwd("C:\\Users\\jonas\\OneDrive\\Dokumente\\GitHub\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
library(readr)
dat <- read_csv("school-shootings-data.csv")
source("C:/Users/glm87/Documents/GITHUB/EXPD-Semesterarbeit/EXPD Semesterarbeit/Semesterarbeit (School shootings).R")
#setwd("C:\\Users\\jonas\\OneDrive\\Dokumente\\GitHub\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
#setwd("C:\\Users\\glm87\\Documents\\GITHUB\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
library(readr)
#setwd("C:\\Users\\jonas\\OneDrive\\Dokumente\\GitHub\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
#setwd("C:\\Users\\glm87\\Documents\\GITHUB\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
library(readr)
dat <- read_csv("school-shootings-data.csv")
#setwd("C:\\Users\\jonas\\OneDrive\\Dokumente\\GitHub\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
setwd("C:\\Users\\glm87\\Documents\\GITHUB\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
library(readr)
dat <- read_csv("school-shootings-data.csv")
plot(x = dat$age_shooter1,
y = dat$casualties,
lpars = list(col = "blue", lwd = 2),
sp = 1,
col = adjustcolor("black", alpha = 0.2),
pch = 19,
main = "Shooter Age / Number of casualties",
ylab = "Number of casualties",
xlab = "Age of the shooter",
log = "y",
)
View(dat)
View(dat)
boxplot( x = dat$shooting_type,
y = dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot( x = factor(dat$shooting_type),
y = dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
# DIAGRAMM 2
shooting_types <- names(sort(table(dat$shooting_type)))
boxplot( x = factor(dat$shooting_type, levels = shooting_types),
y = dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot( factor(dat$shooting_type, levels = shooting_types) ~ dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot( factor(dat$shooting_type) ~ dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot( dat$shooting_type ~ dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
View(dat)
View(dat)
boxplot( dat$shooting_type ~ dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
factor
boxplot( factor(dat$shooting_type) ~ dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot( factor(dat$shooting_type) , dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot( x = factor(dat$shooting_type) ,y= dat$casualties,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type"
)
boxplot(dat$casualties ~ dat$shooting_type)
boxplot(dat$casualties ~ dat$shooting_type)
boxplot(dat$casualties ~ dat$shooting_type, las = 2)
boxplot(dat$casualties ~ dat$shooting_type, las = 2)
boxplot(dat$casualties ~ dat$shooting_type, axes=FALSE)
boxplot(dat$casualties ~ dat$shooting_type, las = 1)
boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = \n"Shooting type")
boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "\n Shooting type")
boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "\n\n Shooting type")
par(mar=c(11, 6, 4, 2))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
par(mar=c(11, 6, 4, 2))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
mtext(data$l, 1, .5, at=b, las=2, cex=.7)
par(mar=c(11, 6, 4, 2))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
mtext(dat$shooting_type, 1, .5, at=b, las=2, cex=.7)
mtext(dat$casualties, 1, .5, at=b, las=2, cex=.7)
mtext(dat, 1, .5, at=b, las=2, cex=.7)
mtext(axTicks(2), 2, .75, at=axTicks(2), las=2)
mtext('Life Stage', 1, 9)
mtext('Life Stage', 1, 11)
title(xlab = "My Label", line = 10)
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
par(mfrow=c(2,2))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
par(mfrow=c(2,1))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
par(mfrow=c(1,2))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
dev.off()
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
par(mar=c(5.1, 4.1, 4.1, 2.1))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
par(mgp=c(3, 1, 0))
par(mgp=c(3, 1, 5))
b <- boxplot(dat$casualties ~ dat$shooting_type,
las = 2,
main = "Casualties per type of shooting",
ylab = "Number of casualties",
xlab = "Shooting type")
mtext("Casualties per type of shooting", side=1, line=3)
mtext("Casualties per type of shooting", side=1, line=4)
mtext("Casualties per type of shooting", side=1, line=6)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
dev.off()
ggplot(data, aes(x = dat$casualties, y = dat$shooting_type)) +
geom_boxplot()
ggplot(data, aes(x = dat$casualties, y = dat$shooting_type)) +
geom_boxplot()
ggplot(data, aes(x = dat$casualties, y = dat$shooting_type)) +
geom_boxplot()
library(ggplot)
ggplot(dat, aes(x = casualties, y = shooting_type)) +
geom_boxplot()
diag_shooting_type <- ggplot(dat, aes(x = casualties, y = shooting_type)) +
geom_boxplot()
diag_shooting_type <-  + labs(x = "Casualties" , y = "Shooting Type" , title ="Casulties per shooting Type" ,
subtitle = , caption = )
diag_shooting_type <-  + labs(x = "Casualties" , y = "Shooting Type" , title ="Casulties per shooting Type"  )
diag_shooting_type + labs(x = "Casualties" , y = "Shooting Type" , title ="Casulties per shooting Type"  )
diag_shooting_type <- ggplot(dat, aes(x = casualties, y = shooting_type)) +
geom_boxplot()
library("ggplot")
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
diag_shooting_type <- ggplot(dat, aes(x = casualties, y = shooting_type)) +
geom_boxplot()
dat <- read_csv("school-shootings-data.csv")
#setwd("C:\\Users\\jonas\\OneDrive\\Dokumente\\GitHub\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
setwd("C:\\Users\\glm87\\Documents\\GITHUB\\EXPD-Semesterarbeit\\EXPD Semesterarbeit")
dat <- read_csv("school-shootings-data.csv")
library(readr)
dat <- read_csv("school-shootings-data.csv")
diag_shooting_type <- ggplot(dat, aes(x = casualties, y = shooting_type)) +
geom_boxplot()
diag_shooting_type + labs(x = "Casualties" , y = "Shooting Type" , title ="Casulties per shooting Type"  )
